/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.github.somi92.snakepitui.dialogs;

import com.github.somi92.snakepitui.interop.SnakePitObject;
import com.github.somi92.snakepitui.interop.threads.SnakePitThread;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author milos
 */
public class BreedDialog extends javax.swing.JDialog {

    private SnakePitThread spt;
    
    /**
     * Creates new form BreedDialog
     */
    public BreedDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        jlblStatus.setVisible(false);
        jbtnStop.setEnabled(false);
        ButtonGroup bg = new ButtonGroup();
        bg.add(jrbtnFull);
        bg.add(jrbtnInitial);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jtxtIterations = new javax.swing.JTextField();
        jtxtMigrations = new javax.swing.JTextField();
        jtxtIslands = new javax.swing.JTextField();
        jtxtTournament = new javax.swing.JTextField();
        jtxtPopulation = new javax.swing.JTextField();
        jtxtDepth = new javax.swing.JTextField();
        jtxtMutations = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jlblStatus = new javax.swing.JLabel();
        jlblMessage = new javax.swing.JLabel();
        jbtnRun = new javax.swing.JButton();
        jbtnStop = new javax.swing.JButton();
        jrbtnInitial = new javax.swing.JRadioButton();
        jrbtnFull = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtxtResults = new javax.swing.JTextArea();
        jbtnSave = new javax.swing.JButton();
        jbtnClear = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Breed snakes");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Genetic programming parameters"));

        jLabel1.setText("Iterations:");

        jLabel2.setText("Migrations:");

        jLabel3.setText("Number of islands:");

        jLabel4.setText("Tournament size:");

        jLabel5.setText("Population size:");

        jLabel6.setText("Max depth:");

        jLabel7.setText("Mutation probability:");

        jtxtIterations.setColumns(10);
        jtxtIterations.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtxtIterations.setText("1");

        jtxtMigrations.setColumns(10);
        jtxtMigrations.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtxtMigrations.setText("5");

        jtxtIslands.setColumns(10);
        jtxtIslands.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtxtIslands.setText("2");

        jtxtTournament.setColumns(10);
        jtxtTournament.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtxtTournament.setText("5");
        jtxtTournament.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtTournamentActionPerformed(evt);
            }
        });

        jtxtPopulation.setColumns(10);
        jtxtPopulation.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtxtPopulation.setText("500");

        jtxtDepth.setColumns(10);
        jtxtDepth.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtxtDepth.setText("3");

        jtxtMutations.setColumns(10);
        jtxtMutations.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtxtMutations.setText("0.3");
        jtxtMutations.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtMutationsActionPerformed(evt);
            }
        });

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jlblStatus.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlblStatus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/github/somi92/snakepitui/res/loading.gif"))); // NOI18N
        jlblStatus.setBorder(null);
        jlblStatus.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jlblMessage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlblMessage.setText("Setup parameters and run");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jlblMessage, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)
                    .addComponent(jlblStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlblMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jlblStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jbtnRun.setText("Run GP");
        jbtnRun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnRunActionPerformed(evt);
            }
        });

        jbtnStop.setText("Stop GP");
        jbtnStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnStopActionPerformed(evt);
            }
        });

        jrbtnInitial.setText("Initial function set");
        jrbtnInitial.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);

        jrbtnFull.setSelected(true);
        jrbtnFull.setText("Full function set");
        jrbtnFull.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jrbtnInitial)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbtnStop, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtnRun, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jtxtMigrations)
                                    .addComponent(jtxtIslands)
                                    .addComponent(jtxtTournament)
                                    .addComponent(jtxtPopulation)
                                    .addComponent(jtxtDepth)
                                    .addComponent(jtxtMutations)
                                    .addComponent(jtxtIterations)))
                            .addComponent(jrbtnFull, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtxtIterations, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jtxtMigrations, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jtxtIslands, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jtxtTournament, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jtxtPopulation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jtxtDepth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jtxtMutations, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jrbtnFull)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jbtnRun)
                            .addComponent(jbtnStop))
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jrbtnInitial)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Results"));

        jtxtResults.setEditable(false);
        jtxtResults.setColumns(20);
        jtxtResults.setFont(new java.awt.Font("DejaVu Sans", 0, 14)); // NOI18N
        jtxtResults.setLineWrap(true);
        jtxtResults.setRows(5);
        jScrollPane1.setViewportView(jtxtResults);

        jbtnSave.setText("Save to a text file");
        jbtnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSaveActionPerformed(evt);
            }
        });

        jbtnClear.setText("Clear results log");
        jbtnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 544, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jbtnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbtnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnSave)
                    .addComponent(jbtnClear))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtxtMutationsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtMutationsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtMutationsActionPerformed

    private void jbtnRunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnRunActionPerformed
        try {
            int itr = Integer.parseInt(jtxtIterations.getText().trim());
            int mig = Integer.parseInt(jtxtMigrations.getText().trim());
            int isl = Integer.parseInt(jtxtIslands.getText().trim());
            int tou = Integer.parseInt(jtxtTournament.getText().trim());
            int pop = Integer.parseInt(jtxtPopulation.getText().trim());
            int dep = Integer.parseInt(jtxtDepth.getText().trim());
            double mut = Double.parseDouble(jtxtMutations.getText().trim());
           
            String functions = "";
            if(jrbtnFull.isSelected()) {
                functions = "full";
            } else if(jrbtnInitial.isSelected()) {
                functions = "init";
            }
            
            boolean validation = validateParams(itr, mig, isl, tou, pop, dep, mut);
            if(!validation) {
                return;
            }

            SnakePitObject spo = new SnakePitObject();
            spo.setIterations(itr);
            spo.setMigrations(mig);
            spo.setNum_islands(isl);
            spo.setTournament_size(tou);
            spo.setPopulation_size(pop);
            spo.setMax_depth(dep);
            spo.setMutation_probability(mut);
            spo.setFunctions(functions);
            spo.setParent(this);

            spt = new SnakePitThread(spo);
            spt.start();
        } catch(NumberFormatException e){
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "All parameters must be entered as numerical values.", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jbtnRunActionPerformed

    private void jbtnStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnStopActionPerformed
        spt.interrupt();
    }//GEN-LAST:event_jbtnStopActionPerformed

    private void jtxtTournamentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtTournamentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtTournamentActionPerformed

    private void jbtnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnClearActionPerformed
        jtxtResults.setText("");
    }//GEN-LAST:event_jbtnClearActionPerformed

    private void jbtnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSaveActionPerformed
        JFileChooser fc = new JFileChooser();
//        fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        FileNameExtensionFilter filter = new FileNameExtensionFilter(".txt", "txt", "text");
        fc.setFileFilter(filter);
        int retVal = fc.showSaveDialog(this);
        if(retVal == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            String text = "File saved at "+(new Date()).toString()+'\n';
            text += getParamsString();
            text += jtxtResults.getText();
            if(text == null) {
                text = "";
            }
            saveToFile(text, file);
        } else {
            JOptionPane.showMessageDialog(this, "Error in file chooser!", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jbtnSaveActionPerformed
    
    private void saveToFile(String text, File file) {
        try {
            String path = file.getCanonicalPath();
            if(!path.endsWith(".txt")) {
                path += ".txt";
            }
            BufferedWriter bw = new BufferedWriter(new FileWriter(path));
            bw.write(text);
            bw.close();
        } catch (FileNotFoundException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Cannot save, file not found!", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "Cannot save, I/O error detected!", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbtnClear;
    private javax.swing.JButton jbtnRun;
    private javax.swing.JButton jbtnSave;
    private javax.swing.JButton jbtnStop;
    private javax.swing.JLabel jlblMessage;
    private javax.swing.JLabel jlblStatus;
    private javax.swing.JRadioButton jrbtnFull;
    private javax.swing.JRadioButton jrbtnInitial;
    private javax.swing.JTextField jtxtDepth;
    private javax.swing.JTextField jtxtIslands;
    private javax.swing.JTextField jtxtIterations;
    private javax.swing.JTextField jtxtMigrations;
    private javax.swing.JTextField jtxtMutations;
    private javax.swing.JTextField jtxtPopulation;
    private javax.swing.JTextArea jtxtResults;
    private javax.swing.JTextField jtxtTournament;
    // End of variables declaration//GEN-END:variables

    
    public void appendResults(String message) {
        jtxtResults.append(message);
        jtxtResults.setCaretPosition(jtxtResults.getText().length());
    }
    
    public void gpStarted() {
        jlblStatus.setVisible(true);
        jlblMessage.setText("GP is running...");
        jbtnRun.setEnabled(false);
        jbtnStop.setEnabled(true);
        
        jtxtDepth.setEnabled(false);
        jtxtIslands.setEnabled(false);
        jtxtIterations.setEnabled(false);
        jtxtMigrations.setEnabled(false);
        jtxtMutations.setEnabled(false);
        jtxtPopulation.setEnabled(false);
        jtxtTournament.setEnabled(false);
        jrbtnFull.setEnabled(false);
        jrbtnInitial.setEnabled(false);
    }
    
    public void gpStopped() {
        jlblStatus.setVisible(false);
        jlblMessage.setText("GP is stopped.");
        jbtnRun.setEnabled(true);
        jbtnStop.setEnabled(false);
        
        jtxtDepth.setEnabled(true);
        jtxtIslands.setEnabled(true);
        jtxtIterations.setEnabled(true);
        jtxtMigrations.setEnabled(true);
        jtxtMutations.setEnabled(true);
        jtxtPopulation.setEnabled(true);
        jtxtTournament.setEnabled(true);
        jrbtnFull.setEnabled(true);
        jrbtnInitial.setEnabled(true);
    }
    
    public void gpFinished() {
        jlblStatus.setVisible(false);
        jlblMessage.setText("GP is finished.");
        jbtnRun.setEnabled(true);
        jbtnStop.setEnabled(false);
        
        jtxtDepth.setEnabled(true);
        jtxtIslands.setEnabled(true);
        jtxtIterations.setEnabled(true);
        jtxtMigrations.setEnabled(true);
        jtxtMutations.setEnabled(true);
        jtxtPopulation.setEnabled(true);
        jtxtTournament.setEnabled(true);
        jrbtnFull.setEnabled(true);
        jrbtnInitial.setEnabled(true);
    }
    
    public boolean validateParams(int itr, int mig, int isl, int tou, int pop, int dep, double mut) {
        if(itr < 0 || mig < 0 || isl < 0 || tou < 0 || pop < 0 || dep < 0 || mut < 0) {
            JOptionPane.showMessageDialog(this, "All parameter values must be zero or positive!", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if(pop < 1 || pop > 3500) {
            JOptionPane.showMessageDialog(this, "Population size must be between 1 and 3500!", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if(mut < 0 || mut > 1) {
            JOptionPane.showMessageDialog(this, "Mutation probability must be between 0 and 1.0!", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        return true;
    }
    
    public String getParamsString() {
        int itr = Integer.parseInt(jtxtIterations.getText().trim());
        int mig = Integer.parseInt(jtxtMigrations.getText().trim());
        int isl = Integer.parseInt(jtxtIslands.getText().trim());
        int tou = Integer.parseInt(jtxtTournament.getText().trim());
        int pop = Integer.parseInt(jtxtPopulation.getText().trim());
        int dep = Integer.parseInt(jtxtDepth.getText().trim());
        double mut = Double.parseDouble(jtxtMutations.getText().trim());
        
        String functions = "";
        if(jrbtnFull.isSelected()) {
            functions = "full";
        } else if(jrbtnInitial.isSelected()) {
            functions = "initial";
        }
        
        String s = "========================================="+'\n'+
                "GP parameters"+'\n'+'\n'+
                "Iterations: "+itr+'\n'+
                "Migrations: "+mig+'\n'+
                "Number of islands: "+isl+'\n'+
                "Tournament size: "+tou+'\n'+
                "Population size: "+pop+'\n'+
                "Maximum depth: "+dep+'\n'+
                "Mutation probability: "+mut+'\n'+
                "Function set: "+functions+'\n'+
                "========================================="+'\n';
        
        return s;
    }
    
    public void exit() {
        if(spt != null) {
            spt.interrupt();
        }
    }
}
