<?xml version="1.0" encoding="UTF-8" ?>

<Form version="1.3" maxVersion="1.9" type="org.netbeans.modules.form.forminfo.JDialogFormInfo">
  <Properties>
    <Property name="defaultCloseOperation" type="int" value="2"/>
    <Property name="resizable" type="boolean" value="false"/>
  </Properties>
  <SyntheticProperties>
    <SyntheticProperty name="formSizePolicy" type="int" value="1"/>
    <SyntheticProperty name="generateCenter" type="boolean" value="false"/>
  </SyntheticProperties>
  <AuxValues>
    <AuxValue name="FormSettings_autoResourcing" type="java.lang.Integer" value="0"/>
    <AuxValue name="FormSettings_autoSetComponentName" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_generateFQN" type="java.lang.Boolean" value="true"/>
    <AuxValue name="FormSettings_generateMnemonicsCode" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_i18nAutoMode" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_layoutCodeTarget" type="java.lang.Integer" value="1"/>
    <AuxValue name="FormSettings_listenerGenerationStyle" type="java.lang.Integer" value="0"/>
    <AuxValue name="FormSettings_variablesLocal" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_variablesModifier" type="java.lang.Integer" value="2"/>
  </AuxValues>

  <Layout>
    <DimensionLayout dim="0">
      <Group type="103" groupAlignment="0" attributes="0">
          <Group type="102" alignment="0" attributes="0">
              <EmptySpace max="-2" attributes="0"/>
              <Component id="jPanel1" min="-2" max="-2" attributes="0"/>
              <EmptySpace max="32767" attributes="0"/>
          </Group>
      </Group>
    </DimensionLayout>
    <DimensionLayout dim="1">
      <Group type="103" groupAlignment="0" attributes="0">
          <Group type="102" alignment="0" attributes="0">
              <EmptySpace max="-2" attributes="0"/>
              <Component id="jPanel1" max="32767" attributes="0"/>
              <EmptySpace max="-2" attributes="0"/>
          </Group>
      </Group>
    </DimensionLayout>
  </Layout>
  <SubComponents>
    <Container class="javax.swing.JPanel" name="jPanel1">
      <Properties>
        <Property name="border" type="javax.swing.border.Border" editor="org.netbeans.modules.form.editors2.BorderEditor">
          <Border info="org.netbeans.modules.form.compat2.border.BevelBorderInfo">
            <BevelBorder/>
          </Border>
        </Property>
      </Properties>

      <Layout>
        <DimensionLayout dim="0">
          <Group type="103" groupAlignment="0" attributes="0">
              <Group type="102" alignment="0" attributes="0">
                  <EmptySpace min="-2" pref="12" max="-2" attributes="0"/>
                  <Group type="103" groupAlignment="1" attributes="0">
                      <Component id="jbtnOK" min="-2" pref="114" max="-2" attributes="0"/>
                      <Group type="103" groupAlignment="0" attributes="0">
                          <Group type="102" attributes="0">
                              <EmptySpace min="6" pref="6" max="-2" attributes="0"/>
                              <Component id="jScrollPane1" min="-2" pref="627" max="-2" attributes="0"/>
                          </Group>
                          <Component id="jLabel1" min="-2" pref="175" max="-2" attributes="0"/>
                      </Group>
                  </Group>
                  <EmptySpace pref="17" max="32767" attributes="0"/>
              </Group>
          </Group>
        </DimensionLayout>
        <DimensionLayout dim="1">
          <Group type="103" groupAlignment="0" attributes="0">
              <Group type="102" alignment="0" attributes="0">
                  <EmptySpace max="-2" attributes="0"/>
                  <Component id="jLabel1" min="-2" max="-2" attributes="0"/>
                  <EmptySpace type="unrelated" max="-2" attributes="0"/>
                  <Component id="jScrollPane1" min="-2" pref="330" max="-2" attributes="0"/>
                  <EmptySpace pref="10" max="32767" attributes="0"/>
                  <Component id="jbtnOK" min="-2" max="-2" attributes="0"/>
                  <EmptySpace max="-2" attributes="0"/>
              </Group>
          </Group>
        </DimensionLayout>
      </Layout>
      <SubComponents>
        <Component class="javax.swing.JLabel" name="jLabel1">
          <Properties>
            <Property name="text" type="java.lang.String" value="About:"/>
          </Properties>
        </Component>
        <Container class="javax.swing.JScrollPane" name="jScrollPane1">
          <AuxValues>
            <AuxValue name="autoScrollPane" type="java.lang.Boolean" value="true"/>
          </AuxValues>

          <Layout class="org.netbeans.modules.form.compat2.layouts.support.JScrollPaneSupportLayout"/>
          <SubComponents>
            <Component class="javax.swing.JTextArea" name="jtxtAbout">
              <Properties>
                <Property name="editable" type="boolean" value="false"/>
                <Property name="columns" type="int" value="20"/>
                <Property name="rows" type="int" value="5"/>
                <Property name="text" type="java.lang.String" value="snake-pit-ui&#xa;&#xa;snake-pit-ui is a project written in Java and Swing that serves as a GUI for both &#xa;snake-pit and clojure-snake projects.&#xa;&#xa;snake-pit is a student project written in Clojure to demonstrate application of &#xa;genetic programming to the snake game. The goal of the project is to evolve &#xa;the snake game AI.&#xa;&#xa;clojure-snake is a simple implementation of the snake game written in Clojure &#xa;and Swing. It also has the ability to use the AI output of the snake-pit project.&#xa;&#xa;It presents a convenient interface that enables the user to experiment with GP&#xa;parameters and evolve the AI, run and display the AI in action, as well as starting &#xa;manual play of the game.&#xa;&#xa;Options&#xa;&#xa;-Manual play&#xa;&#xa; * Starts the clojure-snake in manual mode with the ability to set the speed of&#xa;  the game.&#xa;&#xa;-Load and run snake AI&#xa;&#xa; * Presents an interface for loading the AI (control routine) produced by snake-pit&#xa; and calls the clojure-snake to display the AI in action. Use ctrl-V to paste the control &#xa; routine or enter it manually. The user can also load a hardcoded demo AI with a click&#xa; of a button. To see how a valid control routine looks like please refer to documentation&#xa; of the snake-pit project.&#xa;&#xa;-Breed snakes&#xa;&#xa; * Presents an interface for working with snake-pit library. The user can set GP parameters&#xa; and run the GP engine. The GP reports back the result and the status of the run. Results&#xa; can be saved to a text file along with the parameters of the associated run. For description&#xa; of the available GP parameters please refer to documentation of the snake-pit project.&#xa;&#xa;-About&#xa;&#xa; * Presents information about the project.&#xa;&#xa;GitHub repositories and documentation&#xa;&#xa;  snake-pit https://github.com/somi92/snake-pit&#xa;  clojure-snake https://github.com/somi92/clojure-snake&#xa;  snake-pit-ui https://github.com/somi92/snake-pit-ui&#xa;&#xa;Contact&#xa;&#xa;If you have some comments, suggestions or noticed some bugs and problems feel free to &#xa;contact me and contribute.&#xa;&#xa;Developed by Milos Stojanovic &#xa;email: stojanovicmilos31@gmail.com&#xa;&#xa;License&#xa;&#xa;Copyright &#xa9; 2015&#xa;&#xa;Distributed under the Eclipse Public License."/>
              </Properties>
            </Component>
          </SubComponents>
        </Container>
        <Component class="javax.swing.JButton" name="jbtnOK">
          <Properties>
            <Property name="text" type="java.lang.String" value="OK"/>
          </Properties>
          <Events>
            <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="jbtnOKActionPerformed"/>
          </Events>
        </Component>
      </SubComponents>
    </Container>
  </SubComponents>
</Form>
